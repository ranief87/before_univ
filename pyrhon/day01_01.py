#파이썬 기초 문법

#1. 기초 문법
#1. 1) 문자열 출력
print("hello python!!")
print('hello python!')
print("""python 
hello!!!""")
print('''python hello!''')

# '-' "-" 는 한 줄 문자열을 나타냄
# '''-''' """-""" 여러 줄 문자열 처리 가능




#1. 2) 주석: 프로그램이 인식하지 x (for 코드 부연 설명, 필기)
#은 한줄 주석
#파이썬은 여러 줄 주석 불가능
'문자열로 주석 편법'
"""여러 
주석은
가능하지롱
"""


#1. 3) 들여쓰기: 출력하는 명령문과 바깥 명령문을 구별하기 위한 용법

#print("들여쓰기는 어떤 처리문에 따라 쓰입니다")
#print("print는 출력만 하는 함수임으로 들여쓰기가 들어가면 x")



#2. 숫자열
#2. 1) 사칙연산
'''print(10)
print('10')
print(10 +20 ); print(10 - 20); print(10*20); print(10/20) # 정수 연산자 정수= 정수 가 정석 
# ;은 하나의 명령이 끝났다라는 의미
print(20/10) # 나눗셈의 결과 2.0 (소수점이 있는 것은 무조건 실수형) 
#한마디로 나눗셈만 파이썬에서 실수형으로 나옴 
print(20+1.0) #정수 + 실수= 실수
'''

#2. 2) 문자열과 숫자열을 동시에 출력
print ("+ :", "10 + 20 =", 10+20) #print 안에 ,= 구분자=스페이스바 공백 한 칸

#2. 3) 숫자형의 내장 함수들
#2. 3-1) 크기 비교 함수
print(max(3,7,8))
print(min(4,6,7,10))

#2. 3-2) 연산 함수 및 연산자 (sum([]), pow(), )

#2. 3-2.1 sum ([x,y,z]) []안에 있는 모든 값을 더하는 함수
print(sum([1,2,3,4,5]))
#2. 3-2.2 pow(x,y) x에다가 y제곱
print(pow(5, 2))
#거듭제곱의 연산자 **
print(5**2)
#2. 3-2.3) divmod(10,3) (몫, 나머지)
print(divmod(10,3), divmod(10,2))
#2. 3-2.4) round(x.y,z) 는 x.y값을 소수자리z까지 나타내기 z+1의 자리는 반올림
print(round(11.56,1), round(11.12,4), round(4/3,2))
#2.3-2.5) abs(x) x를 절댓값
print(abs(5), abs(-89))

